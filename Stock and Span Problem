//Stock Span Problem
//sliding window concept
//Sort an array of 0s, 1s and 2s.
import java.util.*;
public class Solution 
{
	static void stockSpan(int arr[])
	{
		Stack<Integer> st = new Stack<>();
		int ans[] = new int[arr.length];
		st.push(0);
		ans[0]=1;
		for(int i=1;i<arr.length;i++)
		{
			while(!st.isEmpty() && arr[st.peek()]<=arr[i])
			{
				st.pop();
			}
			ans[i]=st.isEmpty()?i+1:i-st.peek();
			st.push(i);
		}
		for(int i:ans)
		{
			System.out.println(i);
		}
	}
	public static void main(String[] args) 
	{
		int arr[] = {100,80,60,70,60,75,85};
		stockSpan(arr);
	}
}

class GFG {

	public static void calculateSpan(int A[],int n, int ans[])
	{
		ans[0] = 1;
		for (int i = 1; i < n; i++) {
			int counter = 1;
			while ((i - counter) >= 0 && A[i] >= A[i - counter]) {
				counter += ans[i - counter];
			}
			ans[i] = counter;
		}
	}

	public static void printArray(int arr[], int n)
	{
		for (int i = 0; i < n; i++)
			System.out.print(arr[i] + " ");
	}

	public static void main(String[] args)
	{
		int price[] = { 10, 4, 5, 90, 120, 80 };
		int n = price.length;
		int S[] = new int[n];

		calculateSpan(price, n, S);
		printArray(S, n);
	}
}

