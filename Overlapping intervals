//Overlapping intervals
import java.util.*;
class Interval
{
	int first;
	int second;
	Interval(int first,int second)
	{
		this.first=first;
		this.second=second;
	}
}
public class StackProblem 
{
	public static void mergeIntervals(Interval arr[])  
    {
		Stack<Interval> st = new Stack<Interval>();
		st.push(arr[0]);
		int i=1;
		while(i<arr.length)
		{
			Interval temp1 = st.peek();
			Interval temp2 = arr[i];
			if(temp1.second>=temp2.first)
			{
				st.pop();
				st.push(new Interval(temp1.first<temp2.first?temp1.first:temp2.first, temp1.second>temp2.second?temp1.second:temp2.second));
				i++;
			}
			else
			{
				st.push(temp2);
				i++;
			}
		}
		while(!st.isEmpty())
		{
			Interval ans = st.pop();
			System.out.println(ans.first+","+ans.second);
		}
    }
	public static void main(String[] args) 
	{
		Interval arr[] = new Interval[4];
		arr[0]=new Interval(6,8);
		arr[1]=new Interval(1,9);
		arr[2]=new Interval(2,4);
		arr[3]=new Interval(4,7);
		mergeIntervals(arr);
	}

}
import java.util.Arrays; 
import java.util.Comparator; 
class Interval 
{ 
    int start,end; 
      
    Interval(int start, int end) 
    { 
        this.start=start; 
        this.end=end; 
    } 
} 
  
public class MergeOverlappingIntervals { 
    public static void mergeIntervals(Interval arr[])  
    {  
        Arrays.sort(arr,new Comparator<Interval>(){ 
            public int compare(Interval i1,Interval i2) 
            { 
                return i2.start - i1.start; 
            } 
        }); 
    
        int index = 0; // Stores index of last element  
        for (int i=1; i<arr.length; i++)  
        {  
            if (arr[index].end >=  arr[i].start)  
            {  
                arr[index].end = Math.max(arr[index].end, arr[i].end);  
                arr[index].start = Math.min(arr[index].start, arr[i].start);  
            }  
            else { 
                index++; 
                arr[index] = arr[i];  
            }     
        } 
        System.out.print("The Merged Intervals are: "); 
        for (int i = 0; i <= index; i++)  
        { 
            System.out.print("[" + arr[i].start + "," 
                                        + arr[i].end + "]");  
        } 
    }  
    public static void main(String args[]) { 
        Interval arr[]=new Interval[4]; 
        arr[0]=new Interval(6,8); 
        arr[1]=new Interval(1,9); 
        arr[2]=new Interval(2,4); 
        arr[3]=new Interval(4,7); 
        mergeIntervals(arr); 
    } 
} 
  
