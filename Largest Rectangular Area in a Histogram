//Largest Rectangular Area in a Histogram
import java.util.*;
public class Solution 
{
	static int LRA(int arr[])
	{
		//Left smaller
		int ans2[] = new int[arr.length];
		Stack<Integer> st1 = new Stack<Integer>();
		int k1=0;
		ans2[k1]=-1;
		st1.push(0);
		for(int i=1;i<arr.length;i++)
		{
			while(!st1.isEmpty() && arr[st1.peek()]>=arr[i])
			{
				st1.pop();
			}
			if(st1.isEmpty())
			{
				ans2[++k1]=-1;
			}
			else
			{
				ans2[++k1]=st1.peek();
			}
			st1.push(i);
		}
		// Right smaller
		int ans[] = new int[arr.length];
		Stack<Integer> st = new Stack<Integer>();
		int k=arr.length-1;
		ans[k]=arr.length;
		for(int i=arr.length-2;i>=0;i--)
		{
			while(!st.isEmpty() && arr[st.peek()]>=arr[i])
			{
				st.pop();
			}
			if(st.isEmpty())
			{
				ans[--k]=arr.length;
			}
			else
			{
				ans[--k]=st.peek();
			}
			st.push(i);
		}
		int result=0;
		for(int i=0;i<arr.length;i++)
		{
			result = Math.max(((ans[i]-ans2[i])-1)*arr[i],result);
		}
		return result;
	}
	public static void main(String[] args) 
	{
		int arr[] = {6, 2, 5, 4, 5, 1, 6};
		System.out.println(LRA(arr));
	}
}
