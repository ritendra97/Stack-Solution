//(Infix to Postfix)
import java.util.*;

public class StackProblem 
{
	public static int pre(char ch)
	{
		switch(ch)
		{
	    	case '+':
		    case '-':
		    	return 1;
		    	
		    case '*':
		    case '/':
		    	return 2;
		    	
		    case'^':
		    	return 3;
		}
		return -1;
	}
	public static String infixToPostfix(String exp)
	{
		Stack<Character> st = new Stack<Character>();
		String result = "";
		
		for(int i=0;i<exp.length();i++)
		{
			char ch = exp.charAt(i);
			
			if(Character.isLetterOrDigit(ch))
				result+=ch;
			else if(ch=='(')
			{
				st.push(ch);
			}
			else if(ch==')')
			{
				while(!st.isEmpty() && st.peek()!='(')
				{
					result+=st.pop();	
				}
				st.pop();
			}
			else
			{
				while(!st.isEmpty() &&  pre(ch)<=pre(st.peek()))
				{	
					result+=st.peek();
					st.pop();
				}
				st.push(ch);
			}	
		}
		while(!st.isEmpty())
		{
			if(st.peek() == '(')
               return "Invalid Expression";
            result += st.pop();
		}
		return result ;
	}
	public static void main(String[] args) 
	{
        String exp = "a+b*(c^d-e)^(f+g*h)-i";
        System.out.println(infixToPostfix(exp));
	}
}
